#! /bin/sh

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"

###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions libexec-dir`" || exit 1
export MULLE_BASHFUNCTIONS_LIBEXEC_DIR
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-boot.sh" || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###


# the tests here are wrong, mulle-craft shouldn't b
run_mulle_template()
{
   if [ "$1" = "--clean-env" ]
   then
      shift

      log_fluff "####################################"
      log_fluff ${MULLE_TEMPLATE} --clean-env ${MULLE_TEMPLATE_FLAGS} "$@"
      log_fluff "####################################"

      exekutor "${MULLE_TEMPLATE}" --clean-env ${MULLE_TEMPLATE_FLAGS} "$@"
   else
      log_fluff "####################################"
      log_fluff ${MULLE_TEMPLATE} ${MULLE_TEMPLATE_FLAGS} "$@"
      log_fluff "####################################"

      exekutor "${MULLE_TEMPLATE}" ${MULLE_TEMPLATE_FLAGS} "$@"
   fi
}


expect()
{
   local expected="$1"
   local filename="$2"

   local result

   if ! result="`cat "${filename}" 2> /dev/null`"
   then
      fail "${filename} does not exist"
   fi

   log_debug "${filename}: ${result}"
   if [ "${expected}" != "${result}" ]
   then
      fail "${filename}: \"${result}\" != \"${expected}\""
   fi
}


main()
{
   MULLE_TEMPLATE_FLAGS="$@"

   _options_mini_main "$@" && set -x

   MULLE_TEMPLATE_EXTENSION_PATH="${PWD}"
   export MULLE_TEMPLATE_EXTENSION_PATH

   local directory

   r_make_tmp_directory
   directory="${RVAL:-/tmp/build}"

   #
   # Copy from file to dir
   #
   run_mulle_template --clean-env -DKEY="-" \
                                  -DFILENAME="output" \
                                  -DEXTENSION="txt" \
                                  "FILENAME.EXTENSION" \
                                  "${directory}"
   expect "a-z" "${directory}/output.txt"

   log_verbose "----- #1 PASSED -----"

   #
   # Copy from file to empty (PWD=)
   #
   local templatefile

   templatefile="${PWD}/FILENAME.EXTENSION"

   (
      rexekutor cd "${directory}"  &&
      run_mulle_template --clean-env \
                                     -DKEY="--" \
                                     -DFILENAME="output2" \
                                     -DEXTENSION="txt" \
                                     "${templatefile}"
   ) || exit 1

   expect "a--z" "${directory}/output2.txt"

   log_verbose "----- #2 PASSED -----"

   #
   # Copy from file to file
   #
   templatefile="${PWD}/FILENAME.EXTENSION"

   run_mulle_template --clean-env \
                                  -DKEY="-o-" \
                                  -DFILENAME="output3" \
                                  -DEXTENSION="txt" \
                                  "${templatefile}" \
                                  "${directory}/output4.txt"

   [ -f "${directory}/output3.txt" ] && fail "File output3.txt should not be there"

   expect "a-o-z" "${directory}/output4.txt"

   log_verbose "----- #2 PASSED -----"

   log_info "----- ALL PASSED -----"
   cd ..
   rmdir_safer "${directory}"
}



MULLE_TEMPLATE="${MULLE_TEMPLATE:-${PWD}/../../mulle-template}"

main "$@"
